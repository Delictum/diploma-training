Пример 1. Задан вектор D(5). Создать класс vect осущест¬вляющий ввод данных с клавиатуры, вывод элементов вектора на консоль, и перестановку первого по порядку элемента со k-тым отрицательным элементом вектора. Ограничение доступа в класс (снаружи можно вызывать только public части класса) 
using System;
namespace ConsoleApplication1 
{
   class Program 
   {
      class vect                        // класс векторов vect
      {
             double[ ] a;               // объявление массива int n;	
             int n;                         // размер массива
             public vect(int n)
             // конструктор создаёт вектор
             {
               this.a = new double[n]; 
               this.n = n;
              }
                public int vv()
            // заполнение вектора целиком,
            // клавиатурный ввод
           {
             for (int i = 0; i < n; i++)
             {
                 string buf;
                // строка символов
                buf = Console.ReadLine();
                // заполнение строки
               a[i] = Convert.ToDouble(buf);
                // преобразование строки в число
              }
               return (0);
           }
           public int vyv()                    
           // вывод на консоль
           // элементов вектора 
           {
              for (int i = 0; i < n; i++) 
              Console.WriteLine("a[" + i + "] = " + a[i]);
               return (0);
             }
              public int perest(int k) 
              // переставить 1 и k-ое отрицательное число
              {
                // ключ:  0 – если порядок
                //           - 1 – если нет
                int k1=0;
                // k больше размера вектора
                if  (k >= n)  k1= -1;
                else
                {
                    // счетчик отрицательных чисел
                     int cnt = 0;
                    //  указатель на позицию в массиве
                    int pos = -1;
                    //  подсчёт отрицательных чисел
                    while (cnt < k)
                    { 
                       pos++;
                       if (a[pos] < 0) cnt++;
                     }                                        // подсчёт
                     tmp = a[pos] ;                 //перестановка
                     a[pos] = a[0];
                     a[0] = tmp;
                     k1=0;
                 }
                   return k1;
              }
             //главная программа
             static void Main()
             {
                                                           // создали
               vect  d = new vect (5);     
              d.vv ();                                 //  заполнили
              d.vyv ();                               // вывели на консоль
              d.perest ();                          // переставили
              d.vyv ();                               // вывели на консоль
              }
          }
      }
}
